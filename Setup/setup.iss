; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "SVCC System"
#define MyAppVersion "release v4.3.46.0"
#define MyAppPublisher "Pixel Cowboy Studios"
#define MyAppURL "https://github.com/DJZK"
#define MyAppExeName "SVCC System.exe"

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{F38CF905-B5F1-4092-9324-AE35AB153454}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={userappdata}\Pixel Cowboy Studios\{#MyAppName}
DisableDirPage=yes
DisableProgramGroupPage=yes
LicenseFile=D:\PC\Desktop\Builder\Excelsior\docs\EULA.txt
InfoBeforeFile=D:\PC\Desktop\Builder\Excelsior\docs\System Requirements.txt
; Uncomment the following line to run in non administrative install mode (install for current user only.)
;PrivilegesRequired=lowest
OutputDir=D:\PC\Desktop\Builder\Output
OutputBaseFilename=svcc-setup
SetupIconFile=D:\PC\Desktop\Builder\Excelsior\docs\SVCC Icon Fixed.ico
Compression=lzma
SolidCompression=yes
WizardStyle=modern

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}";

[Files]
Source: "D:\PC\Desktop\Builder\Excelsior\{#MyAppExeName}"; DestDir: "{app}"; Flags: ignoreversion
Source: "D:\PC\Desktop\Builder\Excelsior\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "D:\PC\Desktop\Builder\Runtimes\dotNet.exe"; DestDir: "{app}\runtimes"; Flags: ignoreversion; AfterInstall: RunDotNet
Source: "D:\PC\Desktop\Builder\Runtimes\webview.exe"; DestDir: "{app}\runtimes"; Flags: ignoreversion; AfterInstall: RunWebView

[Code]
procedure RunDotNet;
var
  ResultCode: Integer;
begin
  if not Exec(ExpandConstant('{app}\runtimes\dotNet.exe'), '', '', SW_SHOWNORMAL,
    ewWaitUntilTerminated, ResultCode)
  then
    MsgBox('Other installer failed to run!' + #13#10 +
      SysErrorMessage(ResultCode), mbError, MB_OK);

  if ResultCode > 0 then
    WizardForm.Close;
  
end;

procedure RunWebView;
var
  ResultCode: Integer;
begin
  if not Exec(ExpandConstant('{app}\runtimes\webview.exe'), '', '', SW_SHOWNORMAL,
    ewWaitUntilTerminated, ResultCode)
  then
    MsgBox('Other installer failed to run!' + #13#10 +
      SysErrorMessage(ResultCode), mbError, MB_OK);

  
  if ResultCode > 0 then
    WizardForm.Close;
 
end;
[Icons]
Name: "{autoprograms}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{autodesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon

[Run]
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall skipifsilent

